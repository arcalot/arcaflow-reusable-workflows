# Reusable workflow for the repositories of the Arcalot organization.
# This workflow provides linting and testing of Go sources and produces
# a coverage report.  (It is only run when invoked by another workflow.)
on:
  workflow_call:
    inputs:
      go_version:
        required: true
        type: string
jobs:
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.63.4
          args: --timeout=3m
  test:
    name: go test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
      - name: Set up gotestfmt
        uses: GoTestTools/gotestfmt-action@v2
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: go-test-
      - name: Set up limgo
        uses: GoTestTools/limgo-action@v1.0.2
        with:
          version: "v1.0.0"
          install-only: true
      - name: Setup mocks
        run: |
          go install go.uber.org/mock/mockgen@v0.4.0
          go generate ./...
      - name: Run go test
        run: |
          set -euo pipefail
          go test -coverprofile /tmp/coverage.out -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
          cat .limgo.json
          limgo -coverfile=/tmp/coverage.out -config=.limgo.json -outfmt=md -outfile=/tmp/coverage.md
          cat /tmp/coverage.md >> $GITHUB_STEP_SUMMARY
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            /tmp/gotest.log
            /tmp/coverage.out
            /tmp/coverage.md
          if-no-files-found: error
